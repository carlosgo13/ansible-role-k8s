---
- name: prepare

  hosts: localhost

  gather_facts: false

  vars_files: ../vars/shared.yml

  tasks:

    - block:

        - name: query kind releases
          ansible.builtin.uri:
            url: https://api.github.com/repos/kubernetes-sigs/kind/releases/latest
          register: kind_release_query

        - name: set kind release target
          ansible.builtin.set_fact:
            kind_release: "{{ kind_release_query.json.tag_name }}"

      when: kind_release is not defined

    - name: download kind executable
      ansible.builtin.get_url:
        url: "https://kind.sigs.k8s.io/dl/{{ kind_release }}/kind-{{ ansible_system }}-amd64"
        dest: "{{ _kind_bin }}"
        mode: 0777
      changed_when: false

    - block:

        - name: query helm releases
          ansible.builtin.uri:
            url: https://api.github.com/repos/helm/helm/releases/latest
          register: helm_release_query

        - name: set kind release target
          ansible.builtin.set_fact:
            helm_release: "{{ helm_release_query.json.tag_name }}"

      when: helm_release is not defined

    - name: create temporary directory
      local_action:
        module: ansible.builtin.tempfile
        state: directory
        prefix: kind
      register: _tmpdir
      changed_when: false

    - block:

        - name: download helm release package
          ansible.builtin.unarchive:
            src: "https://get.helm.sh/helm-{{ helm_release }}-linux-amd64.tar.gz"
            dest: "{{ _tmpdir.path }}"
            remote_src: true
          changed_when: false

        - name: find helm executable
          ansible.builtin.find:
            paths: "{{ _tmpdir.path }}"
            file_type: file
            recurse: true
            use_regex: true
            patterns:
              - '^helm$'
          register: helm_bin

        - name: copy helm executable
          ansible.builtin.copy:
            src: "{{ helm_bin.files[0].path }}"
            dest: "{{ _helm_bin }}"
            mode: '0755'

      always:

        - name: cleanup temp files
          ansible.builtin.file:
            state: absent
            path: "{{ _tmpdir.path }}"
