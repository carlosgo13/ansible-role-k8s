---
- name: record cert metadata
  ansible.builtin.set_fact:
    cert_failed: "{{ cert_query | community.general.json_query(cert_filter) }}"
  vars:
    cert_filter: "[?status.conditions[?status == 'False' && type == 'Ready']].metadata.name"
    cert_query: "{{
      query(
        'kubernetes.core.k8s',
        kind='Certificate',
        kubeconfig=k8s_kubeconfig
      )
    }}"

- name: validate cert status
  ansible.builtin.fail:
    msg: "the following certificates are in failed status [{{ cert_failed | join(', ') }}]"
  when: cert_failed | length > 0

- name: create ca cert dir
  ansible.builtin.file:
    state: directory
    path: "{{ k8s_tempdir }}/ca-certificates"

- name: create ssl cert dir
  ansible.builtin.file:
    state: directory
    path: "{{ k8s_tempdir }}/certs"

- name: write ca certificate file
  ansible.builtin.copy:
    content: "{{ _cacert }}"
    dest: "{{ k8s_tempdir }}/ca-certificates/{{ k8s_cluster_name }}.crt"
    mode: '0755'
  vars:
    _cacert: "{{ _cacert_data.data['ca.crt'] | b64decode }}"
    _cacert_data: "{{ _cacert_query | selectattr('metadata.name', 'equalto', 'cluster-issuer-secret') | first }}"
    _cacert_query: "{{
      query(
        'kubernetes.core.k8s',
        kind='Secret',
        namespace=k8s_certmanager_namespace,
        kubeconfig=k8s_kubeconfig
      )
    }}"

- name: add cluster ca certificate to wrapped env
  ansible.builtin.command: "bwrap {{ _bind_dev }} {{ _bind_ca }} {{ _bind_certs }} {{ _cmd }}"
  vars:
    _bind_dev: "--dev-bind / /"
    _bind_ca: "--bind {{ k8s_tempdir }}/ca-certificates/ /usr/local/share/ca-certificates"
    _bind_certs: "--bind {{ k8s_tempdir }}/certs /etc/ssl/certs"
    _cmd: "sh -c 'update-ca-certificates'"
