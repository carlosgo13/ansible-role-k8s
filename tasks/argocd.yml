---
- name: install argocd chart
  kubernetes.core.helm:
    name: "{{ k8s_deployment_prefix }}argocd"
    chart_ref: argocd
    chart_repo_url: "{{ k8s_argocd_chart_url }}"
    chart_version: "{{ k8s_argocd_chart_release }}"
    release_namespace: "{{ k8s_argocd_namespace }}"
    create_namespace: true
    state: "{{ k8s_argocd_state }}"
    wait: yes
    wait_timeout: 5m
    values: "{{ k8s_argocd_chart_values if k8s_argocd_chart_customiz else omit }}"
    kubeconfig: "{{ k8s_kubeconfig | default(omit) }}"

- fail:

- name: patch argocd reposerver deployment
  kubernetes.core.k8s:
    state: present
    definition: "{{ _reposerver_patched }}"
    namespace: "{{ argocd_namespace }}"
    force: yes
  vars:
    _manifests_yaml: "{{ argocd_manifests | map('from_yaml') }}"
    _deployments_yaml: "{{ _manifests_yaml | selectattr('kind', 'equalto', 'Deployment') }}"
    _reposerver_yaml: "{{ _deployments_yaml | selectattr('metadata.name', 'equalto', 'argocd-repo-server') | first }}"
    _reposerver_container: "{{ _reposerver_yaml['spec']['template']['spec']['containers'][0] }}"
    _reposerver_envnew:
      name: ARGOCD_EXEC_TIMEOUT
      value: 3m
    _reposerver_envvars:
      env: "{{ _reposerver_container['env'] + [_reposerver_envnew] }}"
    _reposerver_patch:
      spec:
        template:
          spec:
            containers:
              - "{{ _reposerver_container | combine(_reposerver_envvars) }}"
    _reposerver_patched: "{{ _reposerver_yaml | combine(_reposerver_patch, recursive=True) }}"
  changed_when: false
